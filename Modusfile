# Based on https://github.com/docker-library/openjdk/blob/master/11/jdk/bullseye/Dockerfile

# JAVA_HOME("/usr/local/openjdk-11").
# LANG("C.UTF-8").
# JAVA_VERSION("11.0.13").
# PATH($JAVA_HOME/bin:$PATH)

back_compat :-
    run("{ echo '#/bin/sh'; echo 'echo \"/usr/local/openjdk-11\"'; } > /usr/local/bin/docker-java-home \
         && chmod +x /usr/local/bin/docker-java-home \
         && [ \"/usr/local/openjdk-11\" = \"$(docker-java-home)\" ]").

fetch_keys :-
    run("export GNUPGHOME=\"$(mktemp -d)\"; \
         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys EAC843EBD3EFDB98CC772FADA5CD6035332FA671; \
         gpg --batch --keyserver keyserver.ubuntu.com --keyserver-options no-self-sigs-only --recv-keys CA5F11C6CE22644D42C6AC4492EF8D39DC13168F; \
         gpg --batch --list-sigs --keyid-format 0xLONG CA5F11C6CE22644D42C6AC4492EF8D39DC13168F \
             | tee /dev/stderr \
             | grep '0xA5CD6035332FA671' \
             | grep 'Andrew Haley'; \
         gpg --batch --verify openjdk.tgz.asc openjdk.tgz; \
         gpgconf --kill all; \
         rm -rf \"$GNUPGHOME\";").

extract_openjdk :-
    run("mkdir -p \"/usr/local/openjdk-11\"; \
         tar --extract \
             --file openjdk.tgz \
             --directory \"/usr/local/openjdk-11\" \
             --strip-components 1 \
             --no-same-owner \
         ; \
         rm openjdk.tgz*;").

ca_certs :-
    run("{ \
             echo '#!/usr/bin/env bash'; \
             echo 'set -Eeuo pipefail'; \
             echo 'trust extract --overwrite --format=java-cacerts --filter=ca-anchors --purpose=server-auth \"/usr/local/openjdk-11/lib/security/cacerts\"'; \
         } > /etc/ca-certificates/update.d/docker-openjdk; \
         chmod +x /etc/ca-certificates/update.d/docker-openjdk; \
         /etc/ca-certificates/update.d/docker-openjdk;").

openjdk :-
    from("buildpack-deps:bullseye-scm"),
    run("set -eux; \
         apt-get update; \
         apt-get install -y --no-install-recommends \
             bzip2 unzip xz-utils fontconfig libfreetype6 ca-certificates p11-kit; \
             rm -rf /var/lib/apt/lists/*"),
    back_compat,
    run("set -eux;
         arch=\"$(dpkg --print-architecture)\"; \
         case \"$arch\" in \
             'amd64') \
                downloadUrl='https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_x64_linux_11.0.13_8.tar.gz'; \
                ;; \
             'arm64') \
                downloadUrl='https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_aarch64_linux_11.0.13_8.tar.gz'; \
                ;; \
             *) echo >&2 \"error: unsupported architecture: '$arch'\"; exit 1 ;; \
         esac; \
         \
         wget --progress=dot:giga -O openjdk.tgz \"$downloadUrl\"; \
         wget --progress=dot:giga -O openjdk.tgz.asc \"$downloadUrl.sign\"; \
         \
         "),
    fetch_keys,
    extract_openjdk,
    ca_certs,

    # FIXME: we need proper variables with ENV
    run("export JAVA_HOME='/usr/local/openjdk-11' && export LANG='C.UTF-8' && export JAVA_VERSION='11.0.13' && export PATH=$JAVA_HOME/bin:$PATH; \
         find \"/usr/local/openjdk-11/lib\" -name '*.so' -exec dirname '{}' ';' | sort -u > /etc/ld.so.conf.d/docker-openjdk.conf; \
         ldconfig; \
         java -Xshare:dump; \
         fileEncoding=\"$(echo 'System.out.println(System.getProperty(\"file.encoding\"))' | jshell -s -)\"; [ \"$fileEncoding\" = 'UTF-8' ]; rm -rf ~/.java; \
         javac --version; \
         java --version").

